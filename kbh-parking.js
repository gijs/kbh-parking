// Generated by CoffeeScript 1.6.3
(function() {
  var canvasTiles, map, parkomatCount, parkomatGet, sinh, tile2coordZoom;

  mapElem.style.width = window.innerWidth + "px";

  mapElem.style.height = window.innerHeight + "px";

  mapElem.style.display = "inline-block";

  mapElem.style.position = "absolute";

  mapElem.style.top = mapElem.style.left = "0px";

  map = L.map('mapElem');

  L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  navigator.geolocation.getCurrentPosition(function(pos) {
    return map.setView([pos.coords.latitude, pos.coords.longitude], 13);
  });

  sinh = function(x) {
    return (Math.pow(Math.E, x) - Math.pow(Math.E, -x)) / 2;
  };

  tile2coordZoom = function(zoom) {
    return function(x, y) {
      var scale;
      scale = Math.pow(0.5, zoom);
      return [x * scale * 360.0 - 180.0, 180 / Math.PI * Math.atan(sinh(Math.PI * (1 - 2 * y * scale)))];
    };
  };

  canvasTiles = L.tileLayer.canvas();

  canvasTiles.drawTile = function(canvas, tilePoint, zoom) {
    var lat, lng, tile2coord, x, y, _ref;
    tile2coord = tile2coordZoom(zoom);
    x = tilePoint.x;
    y = tilePoint.y;
    return _ref = tile2coord(x, y), lat = _ref[0], lng = _ref[1], _ref;
    /*
    ctx = canvas.getContext "2d"
    setInterval (->
      ctx.fillRect Math.random() * 256, Math.random() * 256,3,3
    ), 1000
    */

  };

  canvasTiles.addTo(map);

  parkomatGet = function(offset, limit, fn) {
    return $.ajax({
      url: 'http://data.kk.dk/api/action/datastore_search',
      data: {
        resource_id: '660e19fa-8838-4a5c-9495-0d7f94fab51e',
        offset: offset,
        limit: limit
      },
      dataType: 'jsonp',
      success: function(data) {
        var _ref;
        return fn((_ref = data.result) != null ? _ref.records : void 0);
      }
    });
  };

  parkomatCount = function(fn) {
    return $.ajax({
      url: 'http://data.kk.dk/api/action/datastore_search_sql',
      data: {
        sql: 'SELECT COUNT (*) from "660e19fa-8838-4a5c-9495-0d7f94fab51e"'
      },
      dataType: 'jsonp',
      success: function(data) {
        return fn(+data.result.records[0].count);
      }
    });
  };

  parkomatCount(function(n) {
    console.log("count", n);
    return parkomatGet(n - 3 * 24000, 3 * 24000, function(result) {
      return console.log("got n", result.length);
    });
  });

}).call(this);
